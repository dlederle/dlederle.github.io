---
title: Notes on Representations In and Of Software
layout:post
----

This post isn't exactly an argument so much as it is notes towards an argument, which I'm still trying to work through.
I'm going to present my rambling notes on two related topics which I've been reading about over the last year (or more).
First is the idea of a software representation.
Different authors use different terminology (which I'll cover in more depth below), but these are predominantly thought of as simulative models.
Second is the idea of how to represent software.
The most common way is through source code which describes the operation of the software, but other authors have all tackled this in their own way.
I think these are the two central questions that interest me in software studies, and hope that I can articulate them better through my notes on other scholars work.



Representations in Software
===========================

Dourish et al

Kay and Goldberg: Metamedium

Kay on Software

NWF/Mateas: Operational logics/playable models

Mahoney: Operative Representations

Stuff I haven't read as much of:

Format studies (MP3 book) or data modeling in general

Knowledge Representation in AI


Representations of Software
===========================

Frabetti: on code/technical documentation

Gingold: Reverse diagrams

Afterward
=========

This messy lit review is just a start.
There are, of course, an enormous amount of questions generated by this reading and directions to inquire after.

